$date
	Fri Jan 27 11:37:50 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module XRISC_single_tb $end
$var wire 32 ! WriteData [31:0] $end
$var wire 1 " MemWrite $end
$var wire 32 # DataAdr [31:0] $end
$var reg 1 $ clk $end
$var reg 1 % reset $end
$scope module dut $end
$var wire 1 & Memwrite $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 32 ' WriteData [31:0] $end
$var wire 32 ( ReadData [31:0] $end
$var wire 32 ) PC [31:0] $end
$var wire 1 " MemWrite $end
$var wire 32 * Instr [31:0] $end
$var wire 32 + DataAdr [31:0] $end
$scope module XRISC $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 , Zero $end
$var wire 32 - WriteData [31:0] $end
$var wire 2 . ResultSrc [1:0] $end
$var wire 1 / RegWrite $end
$var wire 32 0 ReadData [31:0] $end
$var wire 1 1 PCSrc $end
$var wire 32 2 PC [31:0] $end
$var wire 1 " MemWrite $end
$var wire 1 3 Jump $end
$var wire 32 4 Instr [31:0] $end
$var wire 2 5 ImmSrc [1:0] $end
$var wire 1 6 ALUSrc $end
$var wire 32 7 ALUResult [31:0] $end
$var wire 4 8 ALUControl [3:0] $end
$scope module c $end
$var wire 1 1 PCSrc $end
$var wire 3 9 funct3 [2:0] $end
$var wire 7 : funct7 [6:0] $end
$var wire 7 ; op [6:0] $end
$var wire 1 , Zero $end
$var wire 2 < ResultSrc [1:0] $end
$var wire 1 / RegWrite $end
$var wire 1 " MemWrite $end
$var wire 1 3 Jump $end
$var wire 2 = ImmSrc [1:0] $end
$var wire 1 > Branch $end
$var wire 1 6 ALUSrc $end
$var wire 2 ? ALUOp [1:0] $end
$var wire 4 @ ALUControl [3:0] $end
$scope module ad $end
$var wire 3 A funct3 [2:0] $end
$var wire 7 B funct7 [6:0] $end
$var wire 1 C opb5 $end
$var wire 2 D ALUOp [1:0] $end
$var reg 4 E ALUControl [3:0] $end
$upscope $end
$scope module md $end
$var wire 7 F op [6:0] $end
$var wire 2 G ResultSrc [1:0] $end
$var wire 1 / RegWrite $end
$var wire 1 " MemWrite $end
$var wire 1 3 Jump $end
$var wire 2 H ImmSrc [1:0] $end
$var wire 1 > Branch $end
$var wire 1 6 ALUSrc $end
$var wire 2 I ALUOp [1:0] $end
$var reg 11 J controls [10:0] $end
$upscope $end
$upscope $end
$scope module dp $end
$var wire 4 K ALUControl [3:0] $end
$var wire 1 6 ALUSrc $end
$var wire 2 L ImmSrc [1:0] $end
$var wire 1 1 PCSrc $end
$var wire 1 / RegWrite $end
$var wire 2 M ResultSrc [1:0] $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 , Zero $end
$var wire 32 N WriteData [31:0] $end
$var wire 32 O SrcB [31:0] $end
$var wire 32 P SrcA [31:0] $end
$var wire 32 Q Result [31:0] $end
$var wire 32 R ReadData [31:0] $end
$var wire 32 S PCTarget [31:0] $end
$var wire 32 T PCPlus4 [31:0] $end
$var wire 32 U PCNext [31:0] $end
$var wire 32 V PC [31:0] $end
$var wire 32 W Instr [31:0] $end
$var wire 32 X ImmExt [31:0] $end
$var wire 32 Y ALUResult [31:0] $end
$scope module alu $end
$var wire 4 Z ALUControl [3:0] $end
$var wire 33 [ tmp [32:0] $end
$var wire 1 , Zero $end
$var wire 32 \ SrcB [31:0] $end
$var wire 32 ] SrcA [31:0] $end
$var wire 1 ^ ALU_Out $end
$var reg 32 _ ALUResult [31:0] $end
$upscope $end
$scope module ext $end
$var wire 2 ` immsrc [1:0] $end
$var wire 25 a instr [31:7] $end
$var reg 32 b immext [31:0] $end
$upscope $end
$scope module pcadd4 $end
$var wire 32 c b [31:0] $end
$var wire 32 d c [31:0] $end
$var wire 32 e a [31:0] $end
$upscope $end
$scope module pcaddbranch $end
$var wire 32 f b [31:0] $end
$var wire 32 g c [31:0] $end
$var wire 32 h a [31:0] $end
$upscope $end
$scope module pcmux $end
$var wire 32 i d0 [31:0] $end
$var wire 32 j d1 [31:0] $end
$var wire 1 1 s $end
$var wire 32 k y [31:0] $end
$upscope $end
$scope module pcreg $end
$var wire 1 $ clk $end
$var wire 32 l d [31:0] $end
$var wire 1 % reset $end
$var reg 32 m q [31:0] $end
$upscope $end
$scope module resultmux $end
$var wire 32 n d0 [31:0] $end
$var wire 32 o d2 [31:0] $end
$var wire 2 p s [1:0] $end
$var wire 32 q y [31:0] $end
$var wire 32 r d1 [31:0] $end
$upscope $end
$scope module rf $end
$var wire 5 s A1 [4:0] $end
$var wire 5 t A2 [4:0] $end
$var wire 5 u A3 [4:0] $end
$var wire 32 v WD3 [31:0] $end
$var wire 1 / WE3 $end
$var wire 1 $ clk $end
$var wire 32 w RD2 [31:0] $end
$var wire 32 x RD1 [31:0] $end
$upscope $end
$scope module srcbmux $end
$var wire 32 y d0 [31:0] $end
$var wire 32 z d1 [31:0] $end
$var wire 1 6 s $end
$var wire 32 { y [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module dmem $end
$var wire 32 | a [31:0] $end
$var wire 1 $ clk $end
$var wire 32 } rd [31:0] $end
$var wire 32 ~ wd [31:0] $end
$var wire 1 & we $end
$upscope $end
$scope module imem $end
$var wire 32 !" a [31:0] $end
$var wire 32 "" rd [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module resettable_ff_enable $end
$var wire 1 #" clk $end
$var wire 32 $" d [31:0] $end
$var wire 1 %" en $end
$var wire 1 &" reset $end
$var reg 32 '" q [31:0] $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx '"
z&"
z%"
bz $"
z#"
b10100000000000100010011 ""
b0 !"
bx ~
bx }
b101 |
b101 {
b101 z
bx y
b0 x
bx w
b101 v
b10 u
b101 t
b0 s
bx r
b101 q
b0 p
b100 o
b101 n
b0 m
b100 l
b100 k
b101 j
b100 i
b0 h
b101 g
b101 f
b0 e
b100 d
b100 c
b101 b
b1010000000000010 a
b0 `
b101 _
1^
b0 ]
b101 \
b101 [
b0 Z
b101 Y
b101 X
b10100000000000100010011 W
b0 V
b100 U
b100 T
b101 S
bx R
b101 Q
b0 P
b101 O
bx N
b0 M
b0 L
b0 K
b10010000100 J
b10 I
b0 H
b0 G
b10011 F
b0 E
b10 D
0C
b0 B
b0 A
b0 @
b10 ?
0>
b0 =
b0 <
b10011 ;
b0 :
b0 9
b0 8
b101 7
16
b0 5
b10100000000000100010011 4
03
b0 2
01
bx 0
1/
b0 .
bx -
0,
b101 +
b10100000000000100010011 *
b0 )
bx (
bx '
z&
1%
1$
b101 #
0"
bx !
$end
#5
0$
#10
1$
#15
0$
#20
1$
#22
0%
#25
0$
#30
b1100 Q
b1100 q
b1100 v
0^
b1100 #
b1100 +
b1100 7
b1100 Y
b1100 _
b1100 n
b1100 |
b1100 [
b1100 O
b1100 \
b1100 {
b1100 X
b1100 b
b1100 f
b1100 z
b1100 t
b11000000000000011 a
b11 u
b1000 U
b1000 k
b1000 l
b110000000000000110010011 *
b110000000000000110010011 4
b110000000000000110010011 W
b110000000000000110010011 ""
b10000 S
b10000 g
b10000 j
b1000 T
b1000 d
b1000 i
b1000 o
b100 )
b100 2
b100 V
b100 e
b100 h
b100 m
b100 !"
1$
#35
0$
#40
1^
b11 Q
b11 q
b11 v
b11111111111111111111111111110111 O
b11111111111111111111111111110111 \
b11111111111111111111111111110111 {
b11 #
b11 +
b11 7
b11 Y
b11 _
b11 n
b11 |
b11111111111111111111111111110111 X
b11111111111111111111111111110111 b
b11111111111111111111111111110111 f
b11111111111111111111111111110111 z
b100000000000000000000000000000011 [
b1100 P
b1100 ]
b1100 x
b1111111 :
b1111111 B
b10111 t
b1111111101110001100000111 a
b111 u
b11 s
b1100 U
b1100 k
b1100 l
b11111111011100011000001110010011 *
b11111111011100011000001110010011 4
b11111111011100011000001110010011 W
b11111111011100011000001110010011 ""
b11111111111111111111111111111111 S
b11111111111111111111111111111111 g
b11111111111111111111111111111111 j
b1100 T
b1100 d
b1100 i
b1100 o
b1000 )
b1000 2
b1000 V
b1000 e
b1000 h
b1000 m
b1000 !"
1$
#45
0$
#50
b111 Q
b111 q
b111 v
b111 #
b111 +
b111 7
b111 Y
b111 _
b111 n
b111 |
b101 O
b101 \
b101 {
bx 5
bx =
bx H
bx L
bx `
06
b101 !
b101 '
b101 -
b101 N
b101 w
b101 y
b101 ~
b1000 [
b11 P
b11 ]
b11 x
b11 8
b11 @
b11 E
b11 K
b11 Z
bx X
bx b
bx f
bx z
1C
b1xx00000100 J
b0 :
b0 B
b10 t
b111 s
b110 9
b110 A
b100011111000100 a
b100 u
b110011 ;
b110011 F
b10000 U
b10000 k
b10000 l
b1000111110001000110011 *
b1000111110001000110011 4
b1000111110001000110011 W
b1000111110001000110011 ""
bx S
bx g
bx j
b10000 T
b10000 d
b10000 i
b10000 o
b1100 )
b1100 2
b1100 V
b1100 e
b1100 h
b1100 m
b1100 !"
1$
#55
0$
#60
b100 Q
b100 q
b100 v
0^
b111 O
b111 \
b111 {
b100 #
b100 +
b100 7
b100 Y
b100 _
b100 n
b100 |
b111 !
b111 '
b111 -
b111 N
b111 w
b111 y
b111 ~
b10011 [
b1100 P
b1100 ]
b1100 x
b10 8
b10 @
b10 E
b10 K
b10 Z
b100 t
b11 s
b111 9
b111 A
b1000001111100101 a
b101 u
b10100 U
b10100 k
b10100 l
b10000011111001010110011 *
b10000011111001010110011 4
b10000011111001010110011 W
b10000011111001010110011 ""
b10100 T
b10100 d
b10100 i
b10100 o
b10000 )
b10000 2
b10000 V
b10000 e
b10000 h
b10000 m
b10000 !"
1$
#65
0$
#70
b1011 Q
b1011 q
b1011 v
1^
b1011 #
b1011 +
b1011 7
b1011 Y
b1011 _
b1011 n
b1011 |
b1011 [
b100 P
b100 ]
b100 x
b0 8
b0 @
b0 E
b0 K
b0 Z
b101 s
b1000010100000101 a
b0 9
b0 A
b11000 U
b11000 k
b11000 l
b10000101000001010110011 *
b10000101000001010110011 4
b10000101000001010110011 W
b10000101000001010110011 ""
b11000 T
b11000 d
b11000 i
b11000 o
b10100 )
b10100 2
b10100 V
b10100 e
b10100 h
b10100 m
b10100 !"
1$
#75
0$
#80
b1001000 S
b1001000 g
b1001000 j
b110000 X
b110000 b
b110000 f
b110000 z
b1000 Q
b1000 q
b1000 v
b11 O
b11 \
b11 {
0/
b10 5
b10 =
b10 H
b10 L
b10 `
1>
b1 ?
b1 D
b1 I
0^
b11 !
b11 '
b11 -
b11 N
b11 w
b11 y
b11 ~
b1000001010 J
b1 8
b1 @
b1 E
b1 K
b1 Z
b1000 #
b1000 +
b1000 7
b1000 Y
b1000 _
b1000 n
b1000 |
b1 :
b1 B
b111 t
b1001110010100010000 a
b10000 u
b1100011 ;
b1100011 F
b11100 U
b11100 k
b11100 l
b1110 [
b1011 P
b1011 ]
b1011 x
b10011100101000100001100011 *
b10011100101000100001100011 4
b10011100101000100001100011 W
b10011100101000100001100011 ""
b11100 T
b11100 d
b11100 i
b11100 o
b11000 )
b11000 2
b11000 V
b11000 e
b11000 h
b11000 m
b11000 !"
1$
#85
0$
#90
b0 Q
b0 q
b0 v
1,
0^
b111 O
b111 \
b111 {
b101 8
b101 @
b101 E
b101 K
b101 Z
b0 #
b0 +
b0 7
b0 Y
b0 _
b0 n
b0 |
1/
bx 5
bx =
bx H
bx L
bx `
0>
b10 ?
b10 D
b10 I
b111 !
b111 '
b111 -
b111 N
b111 w
b111 y
b111 ~
b10011 [
b1100 P
b1100 ]
b1100 x
bx X
bx b
bx f
bx z
b1xx00000100 J
b0 :
b0 B
b100 t
b11 s
b1000001101000100 a
b100 u
b10 9
b10 A
b110011 ;
b110011 F
b100000 U
b100000 k
b100000 l
b10000011010001000110011 *
b10000011010001000110011 4
b10000011010001000110011 W
b10000011010001000110011 ""
bx S
bx g
bx j
b100000 T
b100000 d
b100000 i
b100000 o
b11100 )
b11100 2
b11100 V
b11100 e
b11100 h
b11100 m
b11100 !"
1$
#95
0$
#100
11
b101000 S
b101000 g
b101000 j
b1000 X
b1000 b
b1000 f
b1000 z
0/
b10 5
b10 =
b10 H
b10 L
b10 `
1>
b1 ?
b1 D
b1 I
b0 P
b0 ]
b0 x
b1 8
b1 @
b1 E
b1 K
b1 Z
b1000001010 J
b0 [
b0 O
b0 \
b0 {
b0 t
b10000001000 a
b1000 u
b100 s
b0 9
b0 A
b1100011 ;
b1100011 F
b101000 U
b101000 k
b101000 l
b0 !
b0 '
b0 -
b0 N
b0 w
b0 y
b0 ~
b100000010001100011 *
b100000010001100011 4
b100000010001100011 W
b100000010001100011 ""
b100100 T
b100100 d
b100100 i
b100100 o
b100000 )
b100000 2
b100000 V
b100000 e
b100000 h
b100000 m
b100000 !"
1$
#105
0$
#110
bx Q
bx q
bx v
x1
x^
bx O
bx \
bx {
bx 8
bx @
bx E
bx K
bx Z
x,
bx #
bx +
bx 7
bx Y
bx _
bx n
bx |
x/
bx 5
bx =
bx H
bx L
bx `
x6
x"
bx .
bx <
bx G
bx M
bx p
x>
bx ?
bx D
bx I
x3
bx !
bx '
bx -
bx N
bx w
bx y
bx ~
bx [
bx P
bx ]
bx x
bx X
bx b
bx f
bx z
xC
bx J
bx :
bx B
bx t
bx s
bx 9
bx A
bx a
bx u
bx ;
bx F
bx U
bx k
bx l
bx *
bx 4
bx W
bx ""
bx S
bx g
bx j
b101100 T
b101100 d
b101100 i
b101100 o
b101000 )
b101000 2
b101000 V
b101000 e
b101000 h
b101000 m
b101000 !"
1$
#115
0$
#120
bx T
bx d
bx i
bx o
bx )
bx 2
bx V
bx e
bx h
bx m
bx !"
1$
#125
0$
#130
1$
#135
0$
#140
1$
#145
0$
#150
1$
#155
0$
#160
1$
#165
0$
#170
1$
#175
0$
#180
1$
#185
0$
#190
1$
#195
0$
#200
1$
#205
0$
#210
1$
#215
0$
#220
1$
#225
0$
#230
1$
#235
0$
#240
1$
#245
0$
#250
1$
#255
0$
#260
1$
#265
0$
#270
