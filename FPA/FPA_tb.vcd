$date
	Thu Nov 24 16:13:08 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module FPA_tb $end
$var wire 32 ! s [31:0] $end
$var reg 32 " a [31:0] $end
$var reg 32 # b [31:0] $end
$scope module dut $end
$var wire 32 $ a [31:0] $end
$var wire 32 % b [31:0] $end
$var wire 24 & shmant [23:0] $end
$var wire 8 ' shamt [7:0] $end
$var wire 32 ( s [31:0] $end
$var wire 24 ) mantb [23:0] $end
$var wire 24 * manta [23:0] $end
$var wire 23 + fract [22:0] $end
$var wire 8 , expb [7:0] $end
$var wire 8 - expa [7:0] $end
$var wire 8 . exp_pre [7:0] $end
$var wire 8 / exp [7:0] $end
$var wire 1 0 alessb $end
$scope module addmant1 $end
$var wire 24 1 manta [23:0] $end
$var wire 24 2 mantb [23:0] $end
$var wire 24 3 shmant [23:0] $end
$var wire 23 4 fract [22:0] $end
$var wire 8 5 exp_pre [7:0] $end
$var wire 8 6 exp [7:0] $end
$var wire 1 0 alessb $end
$var wire 24 7 addval [23:0] $end
$var wire 25 8 addresult [24:0] $end
$upscope $end
$scope module expcomp1 $end
$var wire 8 9 expa [7:0] $end
$var wire 8 : expb [7:0] $end
$var wire 8 ; bminusa [7:0] $end
$var wire 8 < aminusb [7:0] $end
$var wire 1 0 alessb $end
$var reg 8 = exp [7:0] $end
$var reg 8 > shamt [7:0] $end
$upscope $end
$scope module shiftmant1 $end
$var wire 1 0 alessb $end
$var wire 24 ? manta [23:0] $end
$var wire 24 @ mantb [23:0] $end
$var wire 8 A shamt [7:0] $end
$var wire 24 B shiftedval [23:0] $end
$var reg 24 C shmant [23:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100000000000000000000001 C
b100000000000000000000001 B
b0 A
b100000000000000000000001 @
b100000000000000000000001 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b1000000000000000000000010 8
b100000000000000000000001 7
b1 6
b0 5
b1 4
b100000000000000000000001 3
b100000000000000000000001 2
b100000000000000000000001 1
00
b1 /
b0 .
b0 -
b0 ,
b1 +
b100000000000000000000001 *
b100000000000000000000001 )
b100000000000000000000001 (
b0 '
b100000000000000000000001 &
b1 %
b1 $
b1 #
b1 "
b100000000000000000000001 !
$end
#30
b100000000000000000000010 !
b100000000000000000000010 (
b10 +
b10 4
b1000000000000000000000100 8
b100000000000000000000011 7
b100000000000000000000011 *
b100000000000000000000011 1
b100000000000000000000011 ?
b11 "
b11 $
#40
b100000000000000000000011 !
b100000000000000000000011 (
b11 +
b11 4
b1000000000000000000000110 8
b100000000000000000000011 &
b100000000000000000000011 3
b100000000000000000000011 C
b100000000000000000000011 B
b100000000000000000000011 )
b100000000000000000000011 2
b100000000000000000000011 @
b11 #
b11 %
#50
b100000000000000000000100 !
b100000000000000000000100 (
b100 +
b100 4
b1000000000000000000001000 8
b100000000000000000000101 7
b100000000000000000000101 *
b100000000000000000000101 1
b100000000000000000000101 ?
b101 "
b101 $
#60
b100000000000000000000101 !
b100000000000000000000101 (
b101 +
b101 4
b1000000000000000000001010 8
b100000000000000000000101 &
b100000000000000000000101 3
b100000000000000000000101 C
b100000000000000000000101 B
b100000000000000000000101 )
b100000000000000000000101 2
b100000000000000000000101 @
b101 #
b101 %
